name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2

    - name: Install SDL
      shell: bash
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt-get install libsdl1.2-dev libsdl-mixer1.2-dev 
        elif [ "$RUNNER_OS" == "Windows" ]; then
          mkdir C:\Libraries
          cd C:\Libraries
          curl --output SDL-devel-1.2.15-VC.zip --url https://libsdl.org/release/SDL-devel-1.2.15-VC.zip          
          tar -x -f SDL-devel-1.2.15-VC.zip
          setx SDLDIR C:\Libraries\SDL-1.2.15
          curl --output SDL_mixer-devel-1.2.12-VC.zip --url https://www.libsdl.org/projects/SDL_mixer/release/SDL_mixer-devel-1.2.12-VC.zip
          tar -x -f SDL_mixer-devel-1.2.12-VC.zip
          setx SDLMIXERDIR C:\Libraries\SDL_mixer-1.2.12
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
            
    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          cmake $GITHUB_WORKSPACE/trunk -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLOAD_RESOURCES_FROM_FILES:BOOL=OFF 
        elif [ "$RUNNER_OS" == "Windows" ]; then
          cmake $GITHUB_WORKSPACE/trunk -DCMAKE_BUILD_TYPE=$BUILD_TYPE -A Win32 -DLOAD_RESOURCES_FROM_FILES:BOOL=ON -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE
